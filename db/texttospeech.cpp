// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "texttospeech.h"

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech

IMPLEMENT_DYNCREATE(CTextToSpeech, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech properties

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech operations

//##ModelId=4095FA7A00DA
long CTextToSpeech::GetInitialized()
{
	long result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A00DB
void CTextToSpeech::SetInitialized(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A00EB
void CTextToSpeech::Speak(LPCTSTR Text)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Text);
}

//##ModelId=4095FA7A00FB
void CTextToSpeech::StopSpeaking()
{
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4095FA7A0109
void CTextToSpeech::FastForward()
{
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4095FA7A010A
void CTextToSpeech::Pause()
{
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4095FA7A0119
void CTextToSpeech::Resume()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4095FA7A011A
void CTextToSpeech::Rewind()
{
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4095FA7A0128
long CTextToSpeech::GetDevice()
{
	long result;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0138
void CTextToSpeech::SetDevice(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A0148
long CTextToSpeech::GetEnabled()
{
	long result;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0149
void CTextToSpeech::SetEnabled(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A0158
long CTextToSpeech::GetIsSpeaking()
{
	long result;
	InvokeHelper(0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0167
long CTextToSpeech::GetSpeed()
{
	long result;
	InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0177
void CTextToSpeech::SetSpeed(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A0186
CString CTextToSpeech::GetTTSMode()
{
	CString result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0187
void CTextToSpeech::SetTTSMode(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

//##ModelId=4095FA7A0196
void CTextToSpeech::AboutDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4095FA7A01A6
void CTextToSpeech::GeneralDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4095FA7A01B6
void CTextToSpeech::LexiconDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4095FA7A01C6
void CTextToSpeech::TranslateDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4095FA7A01D6
long CTextToSpeech::GetFindEngine(LPCTSTR EngineId, LPCTSTR MfgName, LPCTSTR ProductName, LPCTSTR ModeID, LPCTSTR ModeName, long LanguageID, LPCTSTR dialect, LPCTSTR Speaker, LPCTSTR Style, long Gender, long Age, long Features, long Interfaces, 
		long EngineFeatures, long RankEngineID, long RankMfgName, long RankProductName, long RankModeID, long RankModeName, long RankLanguage, long RankDialect, long RankSpeaker, long RankStyle, long RankGender, long RankAge, long RankFeatures, 
		long RankInterfaces, long RankEngineFeatures)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		EngineId, MfgName, ProductName, ModeID, ModeName, LanguageID, dialect, Speaker, Style, Gender, Age, Features, Interfaces, EngineFeatures, RankEngineID, RankMfgName, RankProductName, RankModeID, RankModeName, RankLanguage, RankDialect, 
		RankSpeaker, RankStyle, RankGender, RankAge, RankFeatures, RankInterfaces, RankEngineFeatures);
	return result;
}

//##ModelId=4095FA7A0262
long CTextToSpeech::GetCountEngines()
{
	long result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A0271
CString CTextToSpeech::ModeName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A0273
CString CTextToSpeech::MfgName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A0281
CString CTextToSpeech::ProductName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A0291
CString CTextToSpeech::ModeID(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A029F
CString CTextToSpeech::Speaker(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02A1
CString CTextToSpeech::Style(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02B0
long CTextToSpeech::Gender(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02BF
long CTextToSpeech::Age(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02CE
long CTextToSpeech::Features(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02D0
long CTextToSpeech::Interfaces(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02DF
long CTextToSpeech::EngineFeatures(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02EF
long CTextToSpeech::LanguageID(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02FD
CString CTextToSpeech::dialect(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4095FA7A02FF
short CTextToSpeech::GetMouthHeight()
{
	short result;
	InvokeHelper(0x31, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A030D
void CTextToSpeech::SetMouthHeight(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A031C
short CTextToSpeech::GetMouthWidth()
{
	short result;
	InvokeHelper(0x32, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A031D
void CTextToSpeech::SetMouthWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A032C
short CTextToSpeech::GetMouthUpturn()
{
	short result;
	InvokeHelper(0x33, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A032D
void CTextToSpeech::SetMouthUpturn(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A033D
short CTextToSpeech::GetJawOpen()
{
	short result;
	InvokeHelper(0x34, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A033E
void CTextToSpeech::SetJawOpen(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A034C
short CTextToSpeech::GetTeethUpperVisible()
{
	short result;
	InvokeHelper(0x35, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A034D
void CTextToSpeech::SetTeethUpperVisible(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A035C
short CTextToSpeech::GetTeethLowerVisible()
{
	short result;
	InvokeHelper(0x36, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A036B
void CTextToSpeech::SetTeethLowerVisible(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A036D
short CTextToSpeech::GetTonguePosn()
{
	short result;
	InvokeHelper(0x37, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A037A
void CTextToSpeech::SetTonguePosn(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A037C
short CTextToSpeech::GetLipTension()
{
	short result;
	InvokeHelper(0x38, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A038A
void CTextToSpeech::SetLipTension(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A0399
long CTextToSpeech::GetLastError()
{
	long result;
	InvokeHelper(0x3b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A039A
void CTextToSpeech::SetLastError(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A03A9
short CTextToSpeech::GetSuppressExceptions()
{
	short result;
	InvokeHelper(0x3c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A03AA
void CTextToSpeech::SetSuppressExceptions(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7A03BA
void CTextToSpeech::Select(long index)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 index);
}

//##ModelId=4095FA7A03C8
short CTextToSpeech::GetLipType()
{
	short result;
	InvokeHelper(0x3e, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7A03C9
void CTextToSpeech::SetLipType(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7B0000
long CTextToSpeech::GetCurrentMode()
{
	long result;
	InvokeHelper(0x3f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7B0001
void CTextToSpeech::SetCurrentMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4095FA7B0010
long CTextToSpeech::GetHWnd()
{
	long result;
	InvokeHelper(0x40, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4095FA7B0011
long CTextToSpeech::Find(LPCTSTR RankList)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RankList);
	return result;
}
