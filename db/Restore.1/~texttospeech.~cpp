// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "texttospeech.h"

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech

IMPLEMENT_DYNCREATE(CTextToSpeech, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech properties

/////////////////////////////////////////////////////////////////////////////
// CTextToSpeech operations

//##ModelId=4092354A02F0
long CTextToSpeech::GetInitialized()
{
	long result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A02FD
void CTextToSpeech::SetInitialized(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354A02FF
void CTextToSpeech::Speak(LPCTSTR Text)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Text);
}

//##ModelId=4092354A030E
void CTextToSpeech::StopSpeaking()
{
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4092354A030F
void CTextToSpeech::FastForward()
{
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4092354A031C
void CTextToSpeech::Pause()
{
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4092354A031D
void CTextToSpeech::Resume()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4092354A032C
void CTextToSpeech::Rewind()
{
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

//##ModelId=4092354A032D
long CTextToSpeech::GetDevice()
{
	long result;
	InvokeHelper(0x8, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A033C
void CTextToSpeech::SetDevice(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354A033E
long CTextToSpeech::GetEnabled()
{
	long result;
	InvokeHelper(0x9, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A034B
void CTextToSpeech::SetEnabled(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354A035B
long CTextToSpeech::GetIsSpeaking()
{
	long result;
	InvokeHelper(0xa, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A035C
long CTextToSpeech::GetSpeed()
{
	long result;
	InvokeHelper(0xb, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A035D
void CTextToSpeech::SetSpeed(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354A036C
CString CTextToSpeech::GetTTSMode()
{
	CString result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354A037A
void CTextToSpeech::SetTTSMode(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

//##ModelId=4092354A037C
void CTextToSpeech::AboutDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4092354A038C
void CTextToSpeech::GeneralDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4092354A039A
void CTextToSpeech::LexiconDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4092354A03AA
void CTextToSpeech::TranslateDlg(long hWnd, LPCTSTR title)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, title);
}

//##ModelId=4092354A03BA
long CTextToSpeech::GetFindEngine(LPCTSTR EngineId, LPCTSTR MfgName, LPCTSTR ProductName, LPCTSTR ModeID, LPCTSTR ModeName, long LanguageID, LPCTSTR dialect, LPCTSTR Speaker, LPCTSTR Style, long Gender, long Age, long Features, long Interfaces, 
		long EngineFeatures, long RankEngineID, long RankMfgName, long RankProductName, long RankModeID, long RankModeName, long RankLanguage, long RankDialect, long RankSpeaker, long RankStyle, long RankGender, long RankAge, long RankFeatures, 
		long RankInterfaces, long RankEngineFeatures)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_BSTR VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x11, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		EngineId, MfgName, ProductName, ModeID, ModeName, LanguageID, dialect, Speaker, Style, Gender, Age, Features, Interfaces, EngineFeatures, RankEngineID, RankMfgName, RankProductName, RankModeID, RankModeName, RankLanguage, RankDialect, 
		RankSpeaker, RankStyle, RankGender, RankAge, RankFeatures, RankInterfaces, RankEngineFeatures);
	return result;
}

//##ModelId=4092354B0040
long CTextToSpeech::GetCountEngines()
{
	long result;
	InvokeHelper(0x12, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B004E
CString CTextToSpeech::ModeName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B0050
CString CTextToSpeech::MfgName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B005E
CString CTextToSpeech::ProductName(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B006D
CString CTextToSpeech::ModeID(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B006F
CString CTextToSpeech::Speaker(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x17, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B007E
CString CTextToSpeech::Style(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B008C
long CTextToSpeech::Gender(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B008E
long CTextToSpeech::Age(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B009D
long CTextToSpeech::Features(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B00AB
long CTextToSpeech::Interfaces(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B00AD
long CTextToSpeech::EngineFeatures(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B00BC
long CTextToSpeech::LanguageID(long index)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B00CB
CString CTextToSpeech::dialect(long index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		index);
	return result;
}

//##ModelId=4092354B00CD
short CTextToSpeech::GetMouthHeight()
{
	short result;
	InvokeHelper(0x31, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B00DA
void CTextToSpeech::SetMouthHeight(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x31, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B00DC
short CTextToSpeech::GetMouthWidth()
{
	short result;
	InvokeHelper(0x32, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B00EA
void CTextToSpeech::SetMouthWidth(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x32, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B00FB
short CTextToSpeech::GetMouthUpturn()
{
	short result;
	InvokeHelper(0x33, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B00FC
void CTextToSpeech::SetMouthUpturn(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x33, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B010A
short CTextToSpeech::GetJawOpen()
{
	short result;
	InvokeHelper(0x34, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0119
void CTextToSpeech::SetJawOpen(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x34, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B011B
short CTextToSpeech::GetTeethUpperVisible()
{
	short result;
	InvokeHelper(0x35, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B011C
void CTextToSpeech::SetTeethUpperVisible(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x35, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0129
short CTextToSpeech::GetTeethLowerVisible()
{
	short result;
	InvokeHelper(0x36, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B012A
void CTextToSpeech::SetTeethLowerVisible(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x36, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0139
short CTextToSpeech::GetTonguePosn()
{
	short result;
	InvokeHelper(0x37, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B013A
void CTextToSpeech::SetTonguePosn(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x37, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0149
short CTextToSpeech::GetLipTension()
{
	short result;
	InvokeHelper(0x38, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0157
void CTextToSpeech::SetLipTension(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0159
long CTextToSpeech::GetLastError()
{
	long result;
	InvokeHelper(0x3b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0167
void CTextToSpeech::SetLastError(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0169
short CTextToSpeech::GetSuppressExceptions()
{
	short result;
	InvokeHelper(0x3c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0177
void CTextToSpeech::SetSuppressExceptions(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0179
void CTextToSpeech::Select(long index)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 index);
}

//##ModelId=4092354B0187
short CTextToSpeech::GetLipType()
{
	short result;
	InvokeHelper(0x3e, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0188
void CTextToSpeech::SetLipType(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x3e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B0196
long CTextToSpeech::GetCurrentMode()
{
	long result;
	InvokeHelper(0x3f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B0197
void CTextToSpeech::SetCurrentMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x3f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

//##ModelId=4092354B01A5
long CTextToSpeech::GetHWnd()
{
	long result;
	InvokeHelper(0x40, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

//##ModelId=4092354B01A6
long CTextToSpeech::Find(LPCTSTR RankList)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		RankList);
	return result;
}
